{
    "swagger": "2.0",
    "info": {
        "description": "VidCheck server API",
        "title": "VidCheck API",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:7740",
    "basePath": "/",
    "paths": {
        "/claimants": {
            "get": {
                "description": "Get all claimants",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Claimant"
                ],
                "summary": "Show all claimants",
                "operationId": "get-all-claimants",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "limit per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/claimant.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "Create claimant",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Claimant"
                ],
                "summary": "Create claimant",
                "operationId": "add-claimant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Claimant Object",
                        "name": "Claimant",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/claimant.claimant"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Claimant"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/claimants/{claimant_id}": {
            "get": {
                "description": "Get claimant by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Claimant"
                ],
                "summary": "Show a claimant by id",
                "operationId": "get-claimant-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Claimant ID",
                        "name": "claimant_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Claimant"
                        }
                    }
                }
            },
            "put": {
                "description": "Update claimant by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Claimant"
                ],
                "summary": "Update a claimant by id",
                "operationId": "update-claimant-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Claimant ID",
                        "name": "claimant_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Claimant",
                        "name": "Claimant",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/claimant.claimant"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Claimant"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete claimant by ID",
                "tags": [
                    "Claimant"
                ],
                "summary": "Delete a claimant",
                "operationId": "delete-claimant-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Claimant ID",
                        "name": "claimant_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/core/media": {
            "get": {
                "description": "Get all media",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Medium"
                ],
                "summary": "Show all media",
                "operationId": "get-all-media",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Query",
                        "name": "q",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Medium"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create medium",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Medium"
                ],
                "summary": "Create medium",
                "operationId": "add-medium",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Medium Object",
                        "name": "Medium",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/medium.medium"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Medium"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/core/media/{medium_id}": {
            "get": {
                "description": "Get medium by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Medium"
                ],
                "summary": "Show a medium by id",
                "operationId": "get-medium-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Medium ID",
                        "name": "medium_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Medium"
                        }
                    }
                }
            },
            "put": {
                "description": "Update medium by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Medium"
                ],
                "summary": "Update a medium by id",
                "operationId": "update-medium-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Medium ID",
                        "name": "medium_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Medium",
                        "name": "Medium",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/medium.medium"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Medium"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete medium by ID",
                "tags": [
                    "Medium"
                ],
                "summary": "Delete a medium",
                "operationId": "delete-medium-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Medium ID",
                        "name": "medium_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/ratings": {
            "get": {
                "description": "Get all ratings",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rating"
                ],
                "summary": "Show all ratings",
                "operationId": "get-all-ratings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "limit per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rating.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "Create rating",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rating"
                ],
                "summary": "Create rating",
                "operationId": "add-rating",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Rating Object",
                        "name": "Rating",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rating.rating"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Rating"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/ratings/default": {
            "post": {
                "description": "Create Default Ratings",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rating"
                ],
                "summary": "Create Default Ratings",
                "operationId": "add-default-ratings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Rating"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/ratings/embed": {
            "get": {
                "description": "Get all ratings",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ratings"
                ],
                "summary": "Show all ratings",
                "operationId": "get-all-ratings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "limt per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/embed.paging"
                        }
                    }
                }
            }
        },
        "/ratings/{rating_id}": {
            "get": {
                "description": "Get rating by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rating"
                ],
                "summary": "Show a rating by id",
                "operationId": "get-rating-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Rating ID",
                        "name": "rating_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Rating"
                        }
                    }
                }
            },
            "put": {
                "description": "Update rating by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Rating"
                ],
                "summary": "Update a rating by id",
                "operationId": "update-rating-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Rating ID",
                        "name": "rating_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Rating",
                        "name": "Rating",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/rating.rating"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Rating"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete rating by ID",
                "tags": [
                    "Rating"
                ],
                "summary": "Delete a rating",
                "operationId": "delete-rating-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Rating ID",
                        "name": "rating_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/spaces": {
            "get": {
                "description": "Get all spaces",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Space"
                ],
                "summary": "Show all spaces",
                "operationId": "get-all-spaces",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/space.orgWithSpace"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create space",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Space"
                ],
                "summary": "Create space",
                "operationId": "add-space",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Space Object",
                        "name": "Space",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/space.space"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Space"
                        }
                    }
                }
            }
        },
        "/spaces/{space_id}": {
            "put": {
                "description": "Update space",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Space"
                ],
                "summary": "Update space",
                "operationId": "update-space",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "space_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Space Object",
                        "name": "Space",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/space.space"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Space"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete space",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Space"
                ],
                "summary": "Delete space",
                "operationId": "delete-space",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "space_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/videos": {
            "get": {
                "description": "Get all videos",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Videos"
                ],
                "summary": "Show all videos",
                "operationId": "get-all-videos",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "limt per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/video.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "Create video",
                "tags": [
                    "Videos"
                ],
                "summary": "Create video",
                "operationId": "add-video",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Video Api Data",
                        "name": "Data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/video.videoReqData"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/video.videoResData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/videos/embed": {
            "get": {
                "description": "Get all videos",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Videos"
                ],
                "summary": "Show all videos",
                "operationId": "get-all-videos",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "limt per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/embed.paging"
                        }
                    }
                }
            }
        },
        "/videos/embed/{video_id}": {
            "get": {
                "description": "Get published video by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Videos"
                ],
                "summary": "Show a published video by id",
                "operationId": "get-published-video-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Video ID",
                        "name": "video_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/embed.videoResData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/videos/{video_id}": {
            "get": {
                "description": "Get video by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Videos"
                ],
                "summary": "Show a video by id",
                "operationId": "get-video by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Video ID",
                        "name": "video_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/video.videoResData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update video by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Videos"
                ],
                "summary": "Update a video by id",
                "operationId": "update-video-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Video ID",
                        "name": "video_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Video Analysis Api Data",
                        "name": "Data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/video.videoReqData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Video"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete video by ID",
                "tags": [
                    "Videos"
                ],
                "summary": "Delete a video",
                "operationId": "delete-video-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Video ID",
                        "name": "video_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/videos/{video_id}/published": {
            "get": {
                "description": "Get published video by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Videos"
                ],
                "summary": "Show a published video by id",
                "operationId": "get-published-video-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Space ID",
                        "name": "X-Space",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Video ID",
                        "name": "video_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/video.videoResData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "claimant.claimant": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "medium_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "tag_line": {
                    "type": "string"
                }
            }
        },
        "claimant.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Claimant"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "embed.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/embed.videoResData"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "embed.videoResData": {
            "type": "object",
            "properties": {
                "claims": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Claim"
                    }
                },
                "video": {
                    "type": "object",
                    "$ref": "#/definitions/model.Video"
                }
            }
        },
        "medium.medium": {
            "type": "object",
            "required": [
                "dimensions",
                "file_size",
                "name",
                "type"
            ],
            "properties": {
                "alt_text": {
                    "type": "string"
                },
                "caption": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dimensions": {
                    "type": "string"
                },
                "file_size": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "model.Claim": {
            "type": "object",
            "properties": {
                "checked_date": {
                    "type": "string"
                },
                "claim": {
                    "type": "string"
                },
                "claim_date": {
                    "type": "string"
                },
                "claim_sources": {
                    "type": "string"
                },
                "claimant": {
                    "type": "object",
                    "$ref": "#/definitions/model.Claimant"
                },
                "claimant_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_time": {
                    "type": "integer"
                },
                "fact": {
                    "type": "string"
                },
                "html_description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "rating": {
                    "type": "object",
                    "$ref": "#/definitions/model.Rating"
                },
                "rating_id": {
                    "type": "integer"
                },
                "review_sources": {
                    "type": "string"
                },
                "space_id": {
                    "type": "integer"
                },
                "start_time": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "integer"
                },
                "video": {
                    "type": "object",
                    "$ref": "#/definitions/model.Video"
                },
                "video_id": {
                    "type": "integer"
                }
            }
        },
        "model.Claimant": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "html_description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "medium": {
                    "type": "object",
                    "$ref": "#/definitions/model.Medium"
                },
                "medium_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "space_id": {
                    "type": "integer"
                },
                "tag_line": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "integer"
                }
            }
        },
        "model.Medium": {
            "type": "object",
            "properties": {
                "alt_text": {
                    "type": "string"
                },
                "caption": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dimensions": {
                    "type": "string"
                },
                "file_size": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "space_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "model.Rating": {
            "type": "object",
            "properties": {
                "background_colour": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "html_description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "medium": {
                    "type": "object",
                    "$ref": "#/definitions/model.Medium"
                },
                "medium_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "numeric_value": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "space_id": {
                    "type": "integer"
                },
                "text_colour": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "integer"
                }
            }
        },
        "model.Space": {
            "type": "object",
            "properties": {
                "analytics": {
                    "type": "string"
                },
                "contact_info": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "fav_icon": {
                    "type": "object",
                    "$ref": "#/definitions/model.Medium"
                },
                "fav_icon_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "logo": {
                    "type": "object",
                    "$ref": "#/definitions/model.Medium"
                },
                "logo_id": {
                    "type": "integer"
                },
                "logo_mobile": {
                    "type": "object",
                    "$ref": "#/definitions/model.Medium"
                },
                "logo_mobile_id": {
                    "type": "integer"
                },
                "mobile_icon": {
                    "type": "object",
                    "$ref": "#/definitions/model.Medium"
                },
                "mobile_icon_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "organisation_id": {
                    "type": "integer"
                },
                "site_address": {
                    "type": "string"
                },
                "site_title": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "social_media_urls": {
                    "type": "string"
                },
                "tag_line": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "integer"
                },
                "verification_codes": {
                    "type": "string"
                }
            }
        },
        "model.Video": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "space_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "total_duration": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                },
                "video_type": {
                    "type": "string"
                }
            }
        },
        "rating.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Rating"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "rating.rating": {
            "type": "object",
            "required": [
                "background_colour",
                "name",
                "numeric_value",
                "text_colour"
            ],
            "properties": {
                "background_colour": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "medium_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "numeric_value": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "text_colour": {
                    "type": "string"
                }
            }
        },
        "space.orgWithSpace": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "permission": {
                    "type": "object",
                    "$ref": "#/definitions/space.organisationUser"
                },
                "slug": {
                    "type": "string"
                },
                "spaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Space"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "integer"
                }
            }
        },
        "space.organisationUser": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by_id": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "role": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by_id": {
                    "type": "integer"
                }
            }
        },
        "space.space": {
            "type": "object",
            "required": [
                "name",
                "organisation_id"
            ],
            "properties": {
                "analytics": {
                    "type": "string"
                },
                "contact_info": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "fav_icon_id": {
                    "type": "integer"
                },
                "logo_id": {
                    "type": "integer"
                },
                "logo_mobile_id": {
                    "type": "integer"
                },
                "mobile_icon_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "organisation_id": {
                    "type": "integer"
                },
                "site_address": {
                    "type": "string"
                },
                "site_title": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "social_media_urls": {
                    "type": "string"
                },
                "tag_line": {
                    "type": "string"
                },
                "verification_codes": {
                    "type": "string"
                }
            }
        },
        "video.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/video.videoResData"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "video.video": {
            "type": "object",
            "required": [
                "title",
                "total_duration",
                "url",
                "video_type"
            ],
            "properties": {
                "status": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "total_duration": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                },
                "video_type": {
                    "type": "string"
                }
            }
        },
        "video.videoReqData": {
            "type": "object",
            "required": [
                "claims",
                "video"
            ],
            "properties": {
                "claims": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/video.videoanalysis"
                    }
                },
                "video": {
                    "type": "object",
                    "$ref": "#/definitions/video.video"
                }
            }
        },
        "video.videoResData": {
            "type": "object",
            "properties": {
                "claims": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Claim"
                    }
                },
                "video": {
                    "type": "object",
                    "$ref": "#/definitions/model.Video"
                }
            }
        },
        "video.videoanalysis": {
            "type": "object",
            "required": [
                "claimant_id",
                "end_time",
                "rating_id"
            ],
            "properties": {
                "checked_date": {
                    "type": "string"
                },
                "claim": {
                    "type": "string"
                },
                "claim_date": {
                    "type": "string"
                },
                "claim_sources": {
                    "type": "string"
                },
                "claimant_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "end_time": {
                    "type": "integer"
                },
                "fact": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "rating_id": {
                    "type": "integer"
                },
                "review_sources": {
                    "type": "string"
                },
                "start_time": {
                    "type": "integer"
                }
            }
        }
    }
}