basePath: /
definitions:
  author.paging:
    properties:
      nodes:
        items:
          $ref: '#/definitions/model.Author'
        type: array
      total:
        type: integer
    type: object
  category.category:
    properties:
      description:
        type: string
      is_featured:
        type: boolean
      medium_id:
        type: integer
      meta_fields:
        type: string
      name:
        type: string
      parent_id:
        type: integer
      slug:
        type: string
    required:
    - name
    type: object
  category.paging:
    properties:
      nodes:
        items:
          $ref: '#/definitions/model.Category'
        type: array
      total:
        type: integer
    type: object
  claimant.claimant:
    properties:
      description:
        type: string
      medium_id:
        type: integer
      name:
        type: string
      slug:
        type: string
      tag_line:
        type: string
    required:
    - name
    type: object
  claimant.paging:
    properties:
      nodes:
        items:
          $ref: '#/definitions/model.Claimant'
        type: array
      total:
        type: integer
    type: object
  embed.paging:
    properties:
      nodes:
        items:
          $ref: '#/definitions/model.Rating'
        type: array
      total:
        type: integer
    type: object
  embed.videoResData:
    properties:
      claims:
        items:
          $ref: '#/definitions/model.Claim'
        type: array
      video:
        $ref: '#/definitions/model.Video'
        type: object
    type: object
  medium.medium:
    properties:
      alt_text:
        type: string
      caption:
        type: string
      description:
        type: string
      dimensions:
        type: string
      file_size:
        type: integer
      name:
        type: string
      slug:
        type: string
      title:
        type: string
      type:
        type: string
      url:
        type: string
    required:
    - dimensions
    - file_size
    - name
    - type
    type: object
  model.Author:
    properties:
      birth_date:
        type: string
      created_at:
        type: string
      created_by_id:
        type: integer
      deleted_at:
        type: string
      description:
        type: string
      display_name:
        type: string
      email:
        type: string
      featured_medium_id:
        type: integer
      first_name:
        type: string
      gender:
        type: string
      id:
        type: integer
      kid:
        type: string
      last_name:
        type: string
      medium:
        $ref: '#/definitions/model.Medium'
        type: object
      slug:
        type: string
      social_media_urls:
        type: string
      updated_at:
        type: string
      updated_by_id:
        type: integer
    type: object
  model.Category:
    properties:
      created_at:
        type: string
      created_by_id:
        type: integer
      deleted_at:
        type: string
      description:
        type: string
      html_description:
        type: string
      id:
        type: integer
      is_featured:
        type: boolean
      medium:
        $ref: '#/definitions/model.Medium'
        type: object
      medium_id:
        type: integer
      meta_fields:
        type: string
      name:
        type: string
      parent_id:
        type: integer
      slug:
        type: string
      space:
        $ref: '#/definitions/model.Space'
        type: object
      space_id:
        type: integer
      updated_at:
        type: string
      updated_by_id:
        type: integer
      videos:
        items:
          $ref: '#/definitions/model.Video'
        type: array
    type: object
  model.Claim:
    properties:
      checked_date:
        type: string
      claim:
        type: string
      claim_date:
        type: string
      claim_sources:
        type: string
      claimant:
        $ref: '#/definitions/model.Claimant'
        type: object
      claimant_id:
        type: integer
      created_at:
        type: string
      created_by_id:
        type: integer
      deleted_at:
        type: string
      description:
        type: string
      end_time:
        type: integer
      fact:
        type: string
      html_description:
        type: string
      id:
        type: integer
      rating:
        $ref: '#/definitions/model.Rating'
        type: object
      rating_id:
        type: integer
      review_sources:
        type: string
      space_id:
        type: integer
      start_time:
        type: integer
      updated_at:
        type: string
      updated_by_id:
        type: integer
      video:
        $ref: '#/definitions/model.Video'
        type: object
      video_id:
        type: integer
    type: object
  model.Claimant:
    properties:
      created_at:
        type: string
      created_by_id:
        type: integer
      deleted_at:
        type: string
      description:
        type: string
      html_description:
        type: string
      id:
        type: integer
      medium:
        $ref: '#/definitions/model.Medium'
        type: object
      medium_id:
        type: integer
      name:
        type: string
      slug:
        type: string
      space_id:
        type: integer
      tag_line:
        type: string
      updated_at:
        type: string
      updated_by_id:
        type: integer
    type: object
  model.Medium:
    properties:
      alt_text:
        type: string
      caption:
        type: string
      created_at:
        type: string
      created_by_id:
        type: integer
      deleted_at:
        type: string
      description:
        type: string
      dimensions:
        type: string
      file_size:
        type: integer
      id:
        type: integer
      name:
        type: string
      slug:
        type: string
      space_id:
        type: integer
      title:
        type: string
      type:
        type: string
      updated_at:
        type: string
      updated_by_id:
        type: integer
      url:
        type: string
    type: object
  model.OrganisationPermission:
    properties:
      created_at:
        type: string
      created_by_id:
        type: integer
      deleted_at:
        type: string
      id:
        type: integer
      organisation_id:
        type: integer
      spaces:
        type: integer
      updated_at:
        type: string
      updated_by_id:
        type: integer
    type: object
  model.OrganisationPermissionRequest:
    properties:
      created_at:
        type: string
      created_by_id:
        type: integer
      deleted_at:
        type: string
      description:
        type: string
      id:
        type: integer
      organisation_id:
        type: integer
      spaces:
        type: integer
      status:
        type: string
      title:
        type: string
      updated_at:
        type: string
      updated_by_id:
        type: integer
    type: object
  model.Permission:
    properties:
      actions:
        items:
          type: string
        type: array
      resource:
        type: string
    type: object
  model.Policy:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
      permissions:
        items:
          $ref: '#/definitions/model.Permission'
        type: array
      users:
        items:
          $ref: '#/definitions/model.Author'
        type: array
    type: object
  model.Rating:
    properties:
      background_colour:
        type: string
      created_at:
        type: string
      created_by_id:
        type: integer
      deleted_at:
        type: string
      description:
        type: string
      html_description:
        type: string
      id:
        type: integer
      medium:
        $ref: '#/definitions/model.Medium'
        type: object
      medium_id:
        type: integer
      name:
        type: string
      numeric_value:
        type: integer
      slug:
        type: string
      space_id:
        type: integer
      text_colour:
        type: string
      updated_at:
        type: string
      updated_by_id:
        type: integer
    type: object
  model.Space:
    properties:
      analytics:
        type: string
      contact_info:
        type: string
      created_at:
        type: string
      created_by_id:
        type: integer
      deleted_at:
        type: string
      description:
        type: string
      fav_icon:
        $ref: '#/definitions/model.Medium'
        type: object
      fav_icon_id:
        type: integer
      id:
        type: integer
      logo:
        $ref: '#/definitions/model.Medium'
        type: object
      logo_id:
        type: integer
      logo_mobile:
        $ref: '#/definitions/model.Medium'
        type: object
      logo_mobile_id:
        type: integer
      mobile_icon:
        $ref: '#/definitions/model.Medium'
        type: object
      mobile_icon_id:
        type: integer
      name:
        type: string
      organisation_id:
        type: integer
      site_address:
        type: string
      site_title:
        type: string
      slug:
        type: string
      social_media_urls:
        type: string
      tag_line:
        type: string
      updated_at:
        type: string
      updated_by_id:
        type: integer
      verification_codes:
        type: string
    type: object
  model.SpacePermission:
    properties:
      created_at:
        type: string
      created_by_id:
        type: integer
      deleted_at:
        type: string
      id:
        type: integer
      media:
        type: integer
      space:
        $ref: '#/definitions/model.Space'
        type: object
      space_id:
        type: integer
      updated_at:
        type: string
      updated_by_id:
        type: integer
      videos:
        type: integer
    type: object
  model.SpacePermissionRequest:
    properties:
      created_at:
        type: string
      created_by_id:
        type: integer
      deleted_at:
        type: string
      description:
        type: string
      id:
        type: integer
      media:
        type: integer
      space:
        $ref: '#/definitions/model.Space'
        type: object
      space_id:
        type: integer
      status:
        type: string
      title:
        type: string
      updated_at:
        type: string
      updated_by_id:
        type: integer
      videos:
        type: integer
    type: object
  model.Tag:
    properties:
      created_at:
        type: string
      created_by_id:
        type: integer
      deleted_at:
        type: string
      description:
        type: string
      html_description:
        type: string
      id:
        type: integer
      is_featured:
        type: boolean
      name:
        type: string
      slug:
        type: string
      space:
        $ref: '#/definitions/model.Space'
        type: object
      space_id:
        type: integer
      updated_at:
        type: string
      updated_by_id:
        type: integer
      videos:
        items:
          $ref: '#/definitions/model.Video'
        type: array
    required:
    - name
    - slug
    type: object
  model.Video:
    properties:
      created_at:
        type: string
      created_by_id:
        type: integer
      deleted_at:
        type: string
      id:
        type: integer
      space_id:
        type: integer
      status:
        type: string
      summary:
        type: string
      thumbnail_url:
        type: string
      title:
        type: string
      total_duration:
        type: integer
      updated_at:
        type: string
      updated_by_id:
        type: integer
      url:
        type: string
      video_type:
        type: string
    type: object
  organisation.orgPermissionRes:
    properties:
      created_at:
        type: string
      created_by_id:
        type: integer
      deleted_at:
        type: string
      id:
        type: integer
      is_admin:
        type: boolean
      organisation_id:
        type: integer
      space_permissions:
        items:
          $ref: '#/definitions/model.SpacePermission'
        type: array
      spaces:
        type: integer
      updated_at:
        type: string
      updated_by_id:
        type: integer
    type: object
  organisation.orgWithPermissions:
    properties:
      created_at:
        type: string
      created_by_id:
        type: integer
      deleted_at:
        type: string
      description:
        type: string
      featured_medium_id:
        type: integer
      id:
        type: integer
      medium:
        $ref: '#/definitions/model.Medium'
        type: object
      permission:
        $ref: '#/definitions/model.OrganisationPermission'
        type: object
      slug:
        type: string
      title:
        type: string
      updated_at:
        type: string
      updated_by_id:
        type: integer
    type: object
  organisation.organisationPermission:
    properties:
      organisation_id:
        type: integer
      spaces:
        type: integer
    required:
    - organisation_id
    type: object
  organisation.organisationPermissionRequest:
    properties:
      description:
        type: string
      organisation_id:
        type: integer
      spaces:
        type: integer
      title:
        type: string
    required:
    - organisation_id
    type: object
  organisation.paging:
    properties:
      nodes:
        items:
          $ref: '#/definitions/organisation.orgWithPermissions'
        type: array
      total:
        type: integer
    type: object
  policy.paging:
    properties:
      nodes:
        items:
          $ref: '#/definitions/model.Policy'
        type: array
      total:
        type: integer
    type: object
  policy.policyReq:
    properties:
      description:
        type: string
      name:
        type: string
      permissions:
        items:
          $ref: '#/definitions/model.Permission'
        type: array
      users:
        items:
          type: string
        type: array
    type: object
  rating.paging:
    properties:
      nodes:
        items:
          $ref: '#/definitions/model.Rating'
        type: array
      total:
        type: integer
    type: object
  rating.rating:
    properties:
      background_colour:
        type: string
      description:
        type: string
      medium_id:
        type: integer
      name:
        type: string
      numeric_value:
        type: integer
      slug:
        type: string
      text_colour:
        type: string
    required:
    - background_colour
    - name
    - numeric_value
    - text_colour
    type: object
  space.application:
    properties:
      created_at:
        type: string
      created_by_id:
        type: integer
      deleted_at:
        type: string
      description:
        type: string
      id:
        type: integer
      medium:
        $ref: '#/definitions/model.Medium'
        type: object
      medium_id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
      updated_by_id:
        type: integer
      url:
        type: string
    type: object
  space.orgWithSpace:
    properties:
      applications:
        items:
          $ref: '#/definitions/space.application'
        type: array
      created_at:
        type: string
      created_by_id:
        type: integer
      deleted_at:
        type: string
      id:
        type: integer
      permission:
        $ref: '#/definitions/space.organisationUser'
        type: object
      slug:
        type: string
      spaces:
        items:
          $ref: '#/definitions/space.spaceWithPermissions'
        type: array
      title:
        type: string
      updated_at:
        type: string
      updated_by_id:
        type: integer
    type: object
  space.organisationUser:
    properties:
      created_at:
        type: string
      created_by_id:
        type: integer
      deleted_at:
        type: string
      id:
        type: integer
      role:
        type: string
      updated_at:
        type: string
      updated_by_id:
        type: integer
    type: object
  space.paging:
    properties:
      nodes:
        items:
          $ref: '#/definitions/model.SpacePermissionRequest'
        type: array
      total:
        type: integer
    type: object
  space.space:
    properties:
      analytics:
        type: string
      contact_info:
        type: string
      description:
        type: string
      fav_icon_id:
        type: integer
      logo_id:
        type: integer
      logo_mobile_id:
        type: integer
      mobile_icon_id:
        type: integer
      name:
        type: string
      organisation_id:
        type: integer
      site_address:
        type: string
      site_title:
        type: string
      slug:
        type: string
      social_media_urls:
        type: string
      tag_line:
        type: string
      verification_codes:
        type: string
    required:
    - name
    - organisation_id
    type: object
  space.spacePermission:
    properties:
      media:
        type: integer
      space_id:
        type: integer
      videos:
        type: integer
    required:
    - space_id
    type: object
  space.spacePermissionRequest:
    properties:
      description:
        type: string
      media:
        type: integer
      space_id:
        type: integer
      title:
        type: string
      videos:
        type: integer
    required:
    - space_id
    type: object
  space.spaceWithPermissions:
    properties:
      analytics:
        type: string
      contact_info:
        type: string
      created_at:
        type: string
      created_by_id:
        type: integer
      deleted_at:
        type: string
      description:
        type: string
      fav_icon:
        $ref: '#/definitions/model.Medium'
        type: object
      fav_icon_id:
        type: integer
      id:
        type: integer
      logo:
        $ref: '#/definitions/model.Medium'
        type: object
      logo_id:
        type: integer
      logo_mobile:
        $ref: '#/definitions/model.Medium'
        type: object
      logo_mobile_id:
        type: integer
      mobile_icon:
        $ref: '#/definitions/model.Medium'
        type: object
      mobile_icon_id:
        type: integer
      name:
        type: string
      organisation_id:
        type: integer
      permissions:
        items:
          $ref: '#/definitions/model.Permission'
        type: array
      site_address:
        type: string
      site_title:
        type: string
      slug:
        type: string
      social_media_urls:
        type: string
      tag_line:
        type: string
      updated_at:
        type: string
      updated_by_id:
        type: integer
      verification_codes:
        type: string
    type: object
  tag.tag:
    properties:
      description:
        type: string
      is_featured:
        type: boolean
      name:
        type: string
      slug:
        type: string
    required:
    - name
    type: object
  user.paging:
    properties:
      nodes:
        items:
          $ref: '#/definitions/user.userPolicy'
        type: array
      total:
        type: integer
    type: object
  user.policyRes:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  user.userPolicy:
    properties:
      birth_date:
        type: string
      created_at:
        type: string
      created_by_id:
        type: integer
      deleted_at:
        type: string
      description:
        type: string
      display_name:
        type: string
      email:
        type: string
      featured_medium_id:
        type: integer
      first_name:
        type: string
      gender:
        type: string
      id:
        type: integer
      kid:
        type: string
      last_name:
        type: string
      medium:
        $ref: '#/definitions/model.Medium'
        type: object
      policies:
        items:
          $ref: '#/definitions/user.policyRes'
        type: array
      slug:
        type: string
      social_media_urls:
        type: string
      updated_at:
        type: string
      updated_by_id:
        type: integer
    type: object
  video.paging:
    properties:
      nodes:
        items:
          $ref: '#/definitions/video.videoResData'
        type: array
      total:
        type: integer
    type: object
  video.video:
    properties:
      status:
        type: string
      summary:
        type: string
      title:
        type: string
      total_duration:
        type: integer
      url:
        type: string
      video_type:
        type: string
    required:
    - title
    - total_duration
    - url
    - video_type
    type: object
  video.videoReqData:
    properties:
      claims:
        items:
          $ref: '#/definitions/video.videoanalysis'
        type: array
      video:
        $ref: '#/definitions/video.video'
        type: object
    required:
    - claims
    - video
    type: object
  video.videoResData:
    properties:
      claims:
        items:
          $ref: '#/definitions/model.Claim'
        type: array
      video:
        $ref: '#/definitions/model.Video'
        type: object
    type: object
  video.videoanalysis:
    properties:
      checked_date:
        type: string
      claim:
        type: string
      claim_date:
        type: string
      claim_sources:
        type: string
      claimant_id:
        type: integer
      description:
        type: string
      end_time:
        type: integer
      fact:
        type: string
      id:
        type: integer
      rating_id:
        type: integer
      review_sources:
        type: string
      start_time:
        type: integer
    required:
    - claimant_id
    - end_time
    - rating_id
    type: object
host: localhost:7740
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: VidCheck server API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: VidCheck API
  version: "1.0"
paths:
  /categories:
    get:
      description: Get all categories
      operationId: get-all-categories
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: limit per page
        in: query
        name: limit
        type: string
      - description: page number
        in: query
        name: page
        type: string
      - description: Query
        in: query
        name: q
        type: string
      - description: Sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/category.paging'
      summary: Show all categories
      tags:
      - Category
  /categories/{category_id}:
    delete:
      description: Delete category by ID
      operationId: delete-category-by-id
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Category ID
        in: path
        name: category_id
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      responses:
        "200": {}
        "400":
          description: Bad Request
          schema:
            items:
              type: string
            type: array
      summary: Delete a category
      tags:
      - Category
    get:
      description: Get category by ID
      operationId: get-category-by-id
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Category ID
        in: path
        name: category_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Category'
      summary: Show a category by id
      tags:
      - Category
  /claimants:
    get:
      description: Get all claimants
      operationId: get-all-claimants
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: limit per page
        in: query
        name: limit
        type: string
      - description: page number
        in: query
        name: page
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/claimant.paging'
      summary: Show all claimants
      tags:
      - Claimant
    post:
      description: Create claimant
      operationId: add-claimant
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Claimant Object
        in: body
        name: Claimant
        required: true
        schema:
          $ref: '#/definitions/claimant.claimant'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Claimant'
        "400":
          description: Bad Request
          schema:
            items:
              type: string
            type: array
      summary: Create claimant
      tags:
      - Claimant
  /claimants/{claimant_id}:
    delete:
      description: Delete claimant by ID
      operationId: delete-claimant-by-id
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Claimant ID
        in: path
        name: claimant_id
        required: true
        type: string
      responses:
        "200": {}
      summary: Delete a claimant
      tags:
      - Claimant
    get:
      description: Get claimant by ID
      operationId: get-claimant-by-id
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Claimant ID
        in: path
        name: claimant_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Claimant'
      summary: Show a claimant by id
      tags:
      - Claimant
    put:
      description: Update claimant by ID
      operationId: update-claimant-by-id
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Claimant ID
        in: path
        name: claimant_id
        required: true
        type: string
      - description: Claimant
        in: body
        name: Claimant
        schema:
          $ref: '#/definitions/claimant.claimant'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Claimant'
      summary: Update a claimant by id
      tags:
      - Claimant
  /core/authors:
    get:
      description: Get all authors
      operationId: get-all-authors
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: limit per page
        in: query
        name: limit
        type: string
      - description: page number
        in: query
        name: page
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/author.paging'
      summary: Show all authors
      tags:
      - Authors
  /core/categories:
    post:
      description: Create category
      operationId: add-category
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Category Object
        in: body
        name: Category
        required: true
        schema:
          $ref: '#/definitions/category.category'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Category'
        "400":
          description: Bad Request
          schema:
            items:
              type: string
            type: array
      summary: Create category
      tags:
      - Category
  /core/categories/{category_id}:
    put:
      description: Update category by ID
      operationId: update-category-by-id
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Category ID
        in: path
        name: category_id
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Category
        in: body
        name: Category
        schema:
          $ref: '#/definitions/category.category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Category'
      summary: Update a category by id
      tags:
      - Category
  /core/media:
    get:
      description: Get all media
      operationId: get-all-media
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Query
        in: query
        name: q
        type: string
      - description: Sort
        in: query
        name: sort
        type: string
      - description: limit per page
        in: query
        name: limit
        type: string
      - description: page number
        in: query
        name: page
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Medium'
            type: array
      summary: Show all media
      tags:
      - Medium
    post:
      description: Create medium
      operationId: add-medium
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Medium Object
        in: body
        name: Medium
        required: true
        schema:
          items:
            $ref: '#/definitions/medium.medium'
          type: array
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/model.Medium'
            type: array
        "400":
          description: Bad Request
          schema:
            items:
              type: string
            type: array
      summary: Create medium
      tags:
      - Medium
  /core/media/{medium_id}:
    delete:
      description: Delete medium by ID
      operationId: delete-medium-by-id
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Medium ID
        in: path
        name: medium_id
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      responses:
        "200": {}
      summary: Delete a medium
      tags:
      - Medium
    get:
      description: Get medium by ID
      operationId: get-medium-by-id
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Medium ID
        in: path
        name: medium_id
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Medium'
      summary: Show a medium by id
      tags:
      - Medium
    put:
      description: Update medium by ID
      operationId: update-medium-by-id
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Medium ID
        in: path
        name: medium_id
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Medium
        in: body
        name: Medium
        schema:
          $ref: '#/definitions/medium.medium'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Medium'
      summary: Update a medium by id
      tags:
      - Medium
  /core/policies:
    get:
      description: Get all policies
      operationId: get-all-policy
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/policy.paging'
      summary: Get all policies
      tags:
      - Policy
    post:
      description: Create policy
      operationId: add-policy
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Policy Object
        in: body
        name: Policy
        required: true
        schema:
          $ref: '#/definitions/policy.policyReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Policy'
      summary: Create policy
      tags:
      - Policy
  /core/policies/{policy_id}:
    delete:
      description: GeDeletet policy by ID
      operationId: delete-policy-by-id
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Policy ID
        in: path
        name: policy_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Policy'
      summary: Delete policy by ID
      tags:
      - Policy
    get:
      description: Get policy by ID
      operationId: get-policy-by-id
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Policy ID
        in: path
        name: policy_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Policy'
      summary: Get policy by ID
      tags:
      - Policy
    put:
      description: Update policy
      operationId: update-policy
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Policy Object
        in: body
        name: Policy
        required: true
        schema:
          $ref: '#/definitions/policy.policyReq'
      - description: Policy ID
        in: path
        name: policy_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Policy'
      summary: Update policy
      tags:
      - Policy
  /core/policies/default:
    post:
      description: Create Default Policies
      operationId: add-default-policies
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/policy.paging'
        "400":
          description: Bad Request
          schema:
            items:
              type: string
            type: array
      summary: Create Default Policies
      tags:
      - Policy
  /core/users:
    get:
      description: Get users with space access
      operationId: get-space-users
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.paging'
      summary: Get users with space access
      tags:
      - Users
  /core/users/{user_id}/permissions:
    get:
      description: Get user's permission
      operationId: get-users-permission
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Permission'
            type: array
      summary: Get user's permission
      tags:
      - Users
  /permissions/organisations:
    get:
      description: Get all organisation permissions
      operationId: get-all-org-permissions
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Query
        in: query
        name: q
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/organisation.paging'
            type: array
      summary: Show all organisation permissions
      tags:
      - Organisation_Permissions
    post:
      description: Create organisation permission
      operationId: add-org-permission
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Permission Object
        in: body
        name: Permission
        required: true
        schema:
          $ref: '#/definitions/organisation.organisationPermission'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.OrganisationPermission'
        "400":
          description: Bad Request
          schema:
            items:
              type: string
            type: array
      summary: Create organisation permission
      tags:
      - Organisation_Permissions
  /permissions/organisations/{permission_id}:
    delete:
      description: Delete Organisation permission by ID
      operationId: delete-org-permission-by-id
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Permission ID
        in: path
        name: permission_id
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      responses:
        "200": {}
        "400":
          description: Bad Request
          schema:
            items:
              type: string
            type: array
      summary: Delete a Organisation permission
      tags:
      - Organisation_Permissions
    put:
      description: Update Organisation permission by ID
      operationId: update-org-permission-by-id
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Permission ID
        in: path
        name: permission_id
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Permission Body
        in: body
        name: Permission
        schema:
          $ref: '#/definitions/organisation.organisationPermission'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.OrganisationPermission'
      summary: Update a Organisation permission by id
      tags:
      - Organisation_Permissions
  /permissions/organisations/my:
    get:
      description: Get my organisation permissions
      operationId: get-org-permission-by-id
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/organisation.orgPermissionRes'
      summary: Show a my organisation permissions
      tags:
      - Organisation_Permissions
  /permissions/spaces:
    get:
      description: Get all Space permissions
      operationId: get-all-space-permissions
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Query
        in: query
        name: q
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/space.paging'
            type: array
      summary: Show all Space permissions
      tags:
      - Space_Permissions
    post:
      description: Create Space permission
      operationId: add-space-permission
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Permission Object
        in: body
        name: Permission
        required: true
        schema:
          $ref: '#/definitions/space.spacePermission'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.SpacePermission'
        "400":
          description: Bad Request
          schema:
            items:
              type: string
            type: array
      summary: Create Space permission
      tags:
      - Space_Permissions
  /permissions/spaces/{permission_id}:
    delete:
      description: Delete Space permission by ID
      operationId: delete-space-permission-by-id
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Permission ID
        in: path
        name: permission_id
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      responses:
        "200": {}
        "400":
          description: Bad Request
          schema:
            items:
              type: string
            type: array
      summary: Delete a Space permission
      tags:
      - Space_Permissions
    get:
      description: Get Space permissions
      operationId: get-space-permission-by-id
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Permission ID
        in: path
        name: permission_id
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SpacePermission'
      summary: Show a Space permissions
      tags:
      - Space_Permissions
    put:
      description: Update Space permission by ID
      operationId: update-space-permission-by-id
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Permission ID
        in: path
        name: permission_id
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Permission Body
        in: body
        name: Permission
        schema:
          $ref: '#/definitions/space.spacePermission'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SpacePermission'
      summary: Update a Space permission by id
      tags:
      - Space_Permissions
  /permissions/spaces/my:
    get:
      description: Get my Space permissions
      operationId: get-my-space-permissions
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SpacePermission'
      summary: Show a my Space permissions
      tags:
      - Space_Permissions
  /ratings:
    get:
      description: Get all ratings
      operationId: get-all-ratings
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: limit per page
        in: query
        name: limit
        type: string
      - description: page number
        in: query
        name: page
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/rating.paging'
      summary: Show all ratings
      tags:
      - Rating
    post:
      description: Create rating
      operationId: add-rating
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Rating Object
        in: body
        name: Rating
        required: true
        schema:
          $ref: '#/definitions/rating.rating'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Rating'
        "400":
          description: Bad Request
          schema:
            items:
              type: string
            type: array
      summary: Create rating
      tags:
      - Rating
  /ratings/{rating_id}:
    delete:
      description: Delete rating by ID
      operationId: delete-rating-by-id
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Rating ID
        in: path
        name: rating_id
        required: true
        type: string
      responses:
        "200": {}
      summary: Delete a rating
      tags:
      - Rating
    get:
      description: Get rating by ID
      operationId: get-rating-by-id
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Rating ID
        in: path
        name: rating_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Rating'
      summary: Show a rating by id
      tags:
      - Rating
    put:
      description: Update rating by ID
      operationId: update-rating-by-id
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Rating ID
        in: path
        name: rating_id
        required: true
        type: string
      - description: Rating
        in: body
        name: Rating
        schema:
          $ref: '#/definitions/rating.rating'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Rating'
      summary: Update a rating by id
      tags:
      - Rating
  /ratings/default:
    post:
      description: Create Default Ratings
      operationId: add-default-ratings
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/model.Rating'
            type: array
        "400":
          description: Bad Request
          schema:
            items:
              type: string
            type: array
      summary: Create Default Ratings
      tags:
      - Rating
  /ratings/embed:
    get:
      description: Get all ratings
      operationId: get-all-ratings
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: limt per page
        in: query
        name: limit
        type: string
      - description: page number
        in: query
        name: page
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/embed.paging'
      summary: Show all ratings
      tags:
      - Ratings
  /requests/organisations:
    get:
      description: Get all organisation permissions requests
      operationId: get-all-org-permissions-requests
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Status
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/organisation.paging'
            type: array
      summary: Show all organisation permissions requests
      tags:
      - Organisation_Permissions_Request
    post:
      description: Create organisation permission request
      operationId: add-org-permission-request
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Request Object
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/organisation.organisationPermissionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.OrganisationPermissionRequest'
        "400":
          description: Bad Request
          schema:
            items:
              type: string
            type: array
      summary: Create organisation permission request
      tags:
      - Organisation_Permissions_Request
  /requests/organisations/{request_id}:
    delete:
      description: Delete Organisation permission request by ID
      operationId: delete-org-permission-request-by-id
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Request ID
        in: path
        name: request_id
        required: true
        type: string
      responses:
        "200": {}
        "400":
          description: Bad Request
          schema:
            items:
              type: string
            type: array
      summary: Delete a Organisation permission request
      tags:
      - Organisation_Permissions_Request
    get:
      description: Get organisation permissions requests detail
      operationId: get-org-permission-request-by-id
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Request ID
        in: path
        name: request_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.OrganisationPermissionRequest'
      summary: Show a organisation permissions requests detail
      tags:
      - Organisation_Permissions_Request
  /requests/organisations/{request_id}/approve:
    post:
      description: approve organisation permission
      operationId: approve-org-permission
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Request ID
        in: path
        name: request_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.OrganisationPermission'
        "400":
          description: Bad Request
          schema:
            items:
              type: string
            type: array
      summary: approve organisation permission
      tags:
      - Organisation_Permissions_Request
  /requests/organisations/{request_id}/reject:
    post:
      description: reject organisation permission
      operationId: reject-org-permission
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Request ID
        in: path
        name: request_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Bad Request
          schema:
            items:
              type: string
            type: array
      summary: reject organisation permission
      tags:
      - Organisation_Permissions_Request
  /requests/organisations/my:
    get:
      description: Get all my organisation permissions requests
      operationId: get-all-my-org-permissions-requests
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/organisation.paging'
            type: array
      summary: Show all my organisation permissions requests
      tags:
      - Organisation_Permissions_Request
  /requests/spaces:
    get:
      description: Get all space permissions requests
      operationId: get-all-space-permissions-requests
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Status
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/space.paging'
            type: array
      summary: Show all space permissions requests
      tags:
      - Space_Permissions_Request
    post:
      description: Create space permission request
      operationId: add-space-permission-request
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Request Object
        in: body
        name: Request
        required: true
        schema:
          $ref: '#/definitions/space.spacePermissionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.SpacePermissionRequest'
        "400":
          description: Bad Request
          schema:
            items:
              type: string
            type: array
      summary: Create space permission request
      tags:
      - Space_Permissions_Request
  /requests/spaces/{request_id}:
    delete:
      description: Delete Space permission request by ID
      operationId: delete-space-permission-request-by-id
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Request ID
        in: path
        name: request_id
        required: true
        type: string
      responses:
        "200": {}
        "400":
          description: Bad Request
          schema:
            items:
              type: string
            type: array
      summary: Delete a Space permission request
      tags:
      - Space_Permissions_Request
    get:
      description: Get space permissions requests detail
      operationId: get-space-permission-request-by-id
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Request ID
        in: path
        name: request_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SpacePermissionRequest'
      summary: Show a space permissions requests detail
      tags:
      - Space_Permissions_Request
  /requests/spaces/{request_id}/approve:
    post:
      description: approve space permission
      operationId: approve-space-permission
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Request ID
        in: path
        name: request_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.SpacePermission'
        "400":
          description: Bad Request
          schema:
            items:
              type: string
            type: array
      summary: approve space permission
      tags:
      - Space_Permissions_Request
  /requests/spaces/{request_id}/reject:
    post:
      description: reject space permission
      operationId: reject-space-permission
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Request ID
        in: path
        name: request_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Bad Request
          schema:
            items:
              type: string
            type: array
      summary: reject space permission
      tags:
      - Space_Permissions_Request
  /requests/spaces/my:
    get:
      description: Get all my space permissions requests
      operationId: get-all-my-space-permissions-requests
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/space.paging'
            type: array
      summary: Show all my space permissions requests
      tags:
      - Space_Permissions_Request
  /spaces:
    get:
      description: Get all spaces
      operationId: get-all-spaces
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/space.orgWithSpace'
            type: array
      summary: Show all spaces
      tags:
      - Space
    post:
      description: Create space
      operationId: add-space
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space Object
        in: body
        name: Space
        required: true
        schema:
          $ref: '#/definitions/space.space'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Space'
      summary: Create space
      tags:
      - Space
  /spaces/{space_id}:
    delete:
      description: Delete space
      operationId: delete-space
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: path
        name: space_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      summary: Delete space
      tags:
      - Space
    put:
      description: Update space
      operationId: update-space
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: path
        name: space_id
        required: true
        type: string
      - description: Space Object
        in: body
        name: Space
        required: true
        schema:
          $ref: '#/definitions/space.space'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Space'
      summary: Update space
      tags:
      - Space
  /tags:
    get:
      description: Get all tags
      operationId: get-all-tags
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: limit per page
        in: query
        name: limit
        type: string
      - description: page number
        in: query
        name: page
        type: string
      - description: Query
        in: query
        name: q
        type: string
      - description: Sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Tag'
            type: array
      summary: Show all tags
      tags:
      - Tag
    post:
      description: Create tag
      operationId: add-tag
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Tag Object
        in: body
        name: Tag
        required: true
        schema:
          $ref: '#/definitions/tag.tag'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Tag'
        "400":
          description: Bad Request
          schema:
            items:
              type: string
            type: array
      summary: Create tag
      tags:
      - Tag
  /tags/{tag_id}:
    delete:
      description: Delete tag by ID
      operationId: delete-tag-by-id
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Tag ID
        in: path
        name: tag_id
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      responses:
        "200": {}
        "400":
          description: Bad Request
          schema:
            items:
              type: string
            type: array
      summary: Delete a tag
      tags:
      - Tag
    get:
      description: Get tag by ID
      operationId: get-tag-by-id
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Tag ID
        in: path
        name: tag_id
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Tag'
      summary: Show a tag by id
      tags:
      - Tag
    put:
      description: Update tag by ID
      operationId: update-tag-by-id
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Tag ID
        in: path
        name: tag_id
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Tag
        in: body
        name: Tag
        schema:
          $ref: '#/definitions/tag.tag'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Tag'
      summary: Update a tag by id
      tags:
      - Tag
  /videos:
    get:
      description: Get all videos
      operationId: get-all-videos
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: limt per page
        in: query
        name: limit
        type: string
      - description: page number
        in: query
        name: page
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/video.paging'
      summary: Show all videos
      tags:
      - Videos
    post:
      description: Create video
      operationId: add-video
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Video Api Data
        in: body
        name: Data
        required: true
        schema:
          $ref: '#/definitions/video.videoReqData'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/video.videoResData'
        "400":
          description: Bad Request
          schema:
            items:
              type: string
            type: array
      summary: Create video
      tags:
      - Videos
  /videos/{video_id}:
    delete:
      description: Delete video by ID
      operationId: delete-video-by-id
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Video ID
        in: path
        name: video_id
        required: true
        type: string
      responses:
        "200": {}
        "400":
          description: Bad Request
          schema:
            items:
              type: string
            type: array
      summary: Delete a video
      tags:
      - Videos
    get:
      description: Get video by ID
      operationId: get-video by-id
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Video ID
        in: path
        name: video_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/video.videoResData'
        "400":
          description: Bad Request
          schema:
            items:
              type: string
            type: array
      summary: Show a video by id
      tags:
      - Videos
    put:
      description: Update video by ID
      operationId: update-video-by-id
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Video ID
        in: path
        name: video_id
        required: true
        type: string
      - description: Video Analysis Api Data
        in: body
        name: Data
        required: true
        schema:
          $ref: '#/definitions/video.videoReqData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Video'
        "400":
          description: Bad Request
          schema:
            items:
              type: string
            type: array
      summary: Update a video by id
      tags:
      - Videos
  /videos/{video_id}/published:
    get:
      description: Get published video by ID
      operationId: get-published-video-by-id
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Video ID
        in: path
        name: video_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/video.videoResData'
        "400":
          description: Bad Request
          schema:
            items:
              type: string
            type: array
      summary: Show a published video by id
      tags:
      - Videos
  /videos/embed:
    get:
      description: Get all videos
      operationId: get-all-videos
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: limt per page
        in: query
        name: limit
        type: string
      - description: page number
        in: query
        name: page
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/embed.paging'
      summary: Show all videos
      tags:
      - Videos
  /videos/embed/{video_id}:
    get:
      description: Get published video by ID
      operationId: get-published-video-by-id
      parameters:
      - description: User ID
        in: header
        name: X-User
        required: true
        type: string
      - description: Space ID
        in: header
        name: X-Space
        required: true
        type: string
      - description: Video ID
        in: path
        name: video_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/embed.videoResData'
        "400":
          description: Bad Request
          schema:
            items:
              type: string
            type: array
      summary: Show a published video by id
      tags:
      - Videos
swagger: "2.0"
