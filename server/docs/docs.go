// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/analyse": {
            "get": {
                "description": "Show all video analysis",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VideoAnalysis"
                ],
                "summary": "Show all video analysis",
                "operationId": "get-all-video-analysis",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organisation ID",
                        "name": "X-Organisation",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "limt per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/videoanalysis.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "Create videoAnalysis",
                "tags": [
                    "VideoAnalysis"
                ],
                "summary": "Create videoAnalysis",
                "operationId": "add-video-analysis",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organisation ID",
                        "name": "X-Organisation",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Video Analysis Api Data",
                        "name": "Data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/videoanalysis.videoAnalysisApiData"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Video"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/analyse/video/{video_id}/analysis/{video_analysis_id}": {
            "get": {
                "description": "Get videosAnalysis by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VideoAnalysis"
                ],
                "summary": "Show a videosAnalysis by id",
                "operationId": "get-video-analysis-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organisation ID",
                        "name": "X-Organisation",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Video ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Video Analysis ID",
                        "name": "video_analysis_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.VideoAnalysis"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update videosAnalysis by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VideoAnalysis"
                ],
                "summary": "Update a videosAnalysis by id",
                "operationId": "update-video-analysis-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organisation ID",
                        "name": "X-Organisation",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Video ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Video Analysis ID",
                        "name": "video_analysis_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Video Analysis Data",
                        "name": "Data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/videoanalysis.videoAnalysis"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.VideoAnalysis"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete videoAnalysis by id",
                "tags": [
                    "VideoAnalysis"
                ],
                "summary": "Delete a videoAnalysis by id",
                "operationId": "delete-video-analysis-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organisation ID",
                        "name": "X-Organisation",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Video ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Video Analysis ID",
                        "name": "video_analysis_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/organisations": {
            "get": {
                "description": "Get all organisations",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organisation"
                ],
                "summary": "Show all organisations",
                "operationId": "get-all-organisations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organisation ID",
                        "name": "X-Organisation",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "limit per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Organisation"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/video": {
            "get": {
                "description": "Get all videos",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Videos"
                ],
                "summary": "Show all videos",
                "operationId": "get-all-videos",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organisation ID",
                        "name": "X-Organisation",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "limt per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/video.paging"
                        }
                    }
                }
            },
            "post": {
                "description": "Create video",
                "tags": [
                    "Videos"
                ],
                "summary": "Create video",
                "operationId": "add-video",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organisation ID",
                        "name": "X-Organisation",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Video Analysis Api Data",
                        "name": "Data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/video.videoAnalysisApiData"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Video"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/video/{video_id}": {
            "get": {
                "description": "Get video by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Videos"
                ],
                "summary": "Show a video by id",
                "operationId": "get-video by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organisation ID",
                        "name": "X-Organisation",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Video ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Video"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update video by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Videos"
                ],
                "summary": "Update a video by id",
                "operationId": "update-video-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organisation ID",
                        "name": "X-Organisation",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Video ID",
                        "name": "video_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Video Analysis Api Data",
                        "name": "Data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/video.videoAnalysisApiData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Video"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete video by ID",
                "tags": [
                    "Videos"
                ],
                "summary": "Delete a video",
                "operationId": "delete-video-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "X-User",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Organisation ID",
                        "name": "X-Organisation",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Video ID",
                        "name": "video_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Organisation": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "permission": {
                    "type": "object",
                    "$ref": "#/definitions/model.organisationUser"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Video": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "organisationID": {
                    "type": "integer"
                },
                "summary": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "userID": {
                    "type": "integer"
                },
                "videoType": {
                    "type": "string"
                }
            }
        },
        "model.VideoAnalysis": {
            "type": "object",
            "properties": {
                "claim": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "endTime": {
                    "type": "integer"
                },
                "endTimeFraction": {
                    "type": "number"
                },
                "fact": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "ratingValue": {
                    "type": "integer"
                },
                "startTime": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "video": {
                    "type": "object",
                    "$ref": "#/definitions/model.Video"
                },
                "videoID": {
                    "type": "integer"
                }
            }
        },
        "model.organisationUser": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "role": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "video.paging": {
            "type": "object",
            "properties": {
                "total": {
                    "type": "integer"
                },
                "videos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Video"
                    }
                }
            }
        },
        "video.video": {
            "type": "object",
            "required": [
                "title",
                "url",
                "video_type"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "summary": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "video_type": {
                    "type": "string"
                }
            }
        },
        "video.videoAnalysis": {
            "type": "object",
            "required": [
                "end_time",
                "end_time_fraction",
                "rating_value"
            ],
            "properties": {
                "claim": {
                    "type": "string"
                },
                "end_time": {
                    "type": "integer"
                },
                "end_time_fraction": {
                    "type": "number"
                },
                "fact": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "rating_value": {
                    "type": "integer"
                },
                "start_time": {
                    "type": "integer"
                }
            }
        },
        "video.videoAnalysisApiData": {
            "type": "object",
            "required": [
                "analysis",
                "video"
            ],
            "properties": {
                "analysis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/video.videoAnalysis"
                    }
                },
                "video": {
                    "type": "object",
                    "$ref": "#/definitions/video.video"
                }
            }
        },
        "videoanalysis.paging": {
            "type": "object",
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.VideoAnalysis"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "videoanalysis.video": {
            "type": "object",
            "required": [
                "title",
                "url",
                "video_type"
            ],
            "properties": {
                "summary": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "video_type": {
                    "type": "string"
                }
            }
        },
        "videoanalysis.videoAnalysis": {
            "type": "object",
            "required": [
                "end_time",
                "end_time_fraction",
                "rating_value"
            ],
            "properties": {
                "claim": {
                    "type": "string"
                },
                "end_time": {
                    "type": "integer"
                },
                "end_time_fraction": {
                    "type": "number"
                },
                "fact": {
                    "type": "string"
                },
                "rating_value": {
                    "type": "integer"
                },
                "start_time": {
                    "type": "integer"
                }
            }
        },
        "videoanalysis.videoAnalysisApiData": {
            "type": "object",
            "required": [
                "analysis",
                "video"
            ],
            "properties": {
                "analysis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/videoanalysis.videoAnalysis"
                    }
                },
                "video": {
                    "type": "object",
                    "$ref": "#/definitions/videoanalysis.video"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:8080",
	BasePath:    "/",
	Schemes:     []string{},
	Title:       "VidCheck API",
	Description: "VidCheck server API",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
